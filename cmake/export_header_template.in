// File: Export.h
// Defines macros for exporting library functions.

#ifndef @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT_HEADER_INCLUDED
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT_HEADER_INCLUDED

////////////////////////////////////////////
// Library Type
////////////////////////////////////////////

#define @EXPORTHEADER_TARGET_UPPERCASE@_IS_STATIC @EXPORTHEADER_STATIC_VAL@

////////////////////////////////////////////
// Extern C
////////////////////////////////////////////

#ifdef __cplusplus
// C++ needs extern C annotation
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXTERNC extern "C"
#else
// C does not need this annotation
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXTERNC
#endif // __cplusplus

#if defined(_WIN32)

////////////////////////////////////////////
// Begin Windows
////////////////////////////////////////////

// Windows supports specifying the cdecl calling convention
#define @EXPORTHEADER_TARGET_UPPERCASE@_CDECL __cdecl

#if !(@EXPORTHEADER_TARGET_UPPERCASE@_IS_STATIC)
#ifdef @EXPORTHEADER_PRODUCER_DEFINE@
// Shared library is being built, so mark symbols for export
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT __declspec(dllexport)
#else
// Shared library is being used, so mark symbols for import
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT __declspec(dllimport)
#endif // @EXPORTHEADER_PRODUCER_DEFINE@
#else
// Library is static, so no import/export required.
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT
#endif // !(@EXPORTHEADER_TARGET_UPPERCASE@_IS_STATIC)

////////////////////////////////////////////
// End Windows
////////////////////////////////////////////

#elif defined(__linux__)

////////////////////////////////////////////
// Begin Linux
////////////////////////////////////////////

// Not on Windows, so cdecl is not required
#define @EXPORTHEADER_TARGET_UPPERCASE@_CDECL

#if !(@EXPORTHEADER_TARGET_UPPERCASE@_IS_STATIC)
// Shared library is being built, so mark exported symbols as visible
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT __attribute__((visibility("default")))
#else
// Library is static, so no import/export required.
#define @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT
#endif // !(@EXPORTHEADER_TARGET_UPPERCASE@_IS_STATIC)

////////////////////////////////////////////
// End Linux
////////////////////////////////////////////

#else
#error Current platform is not supported by this export header
#endif

// Now combine all of these switches into a macro that exposes a function in the library's public API:
#define @EXPORTHEADER_TARGET_UPPERCASE@_PUBLIC(returnType) @EXPORTHEADER_TARGET_UPPERCASE@_EXTERNC @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT returnType @EXPORTHEADER_TARGET_UPPERCASE@_CDECL

#endif // @EXPORTHEADER_TARGET_UPPERCASE@_EXPORT_HEADER_INCLUDED
